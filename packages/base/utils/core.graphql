type Config @cacheControl(maxAge: 3600) {
  seo: SEO!
  general: ConfigGeneral!
  layout: ConfigLayout!
}

type ConfigLayout @cacheControl(maxAge: 3600) {
  header: JSONObject
  footer: JSONObject
}

type ConfigGeneral @cacheControl(maxAge: 3600) {
  admin_email: String!
}

input ConfigGeneralInput {
  admin_email: String!
}

input ConfigInput {
  seo: SEOInput!
  general: ConfigGeneralInput!
}

type Image implements Timestamp @cacheControl(maxAge: 3600) {
  src: String!
  public_id: ID!
  alt: String
  mimetype: String!
  dateCreated: String!
  dateUpdated: String!
}

input ImageInput {
  public_id: ID!
  resource_type: String!
  src: String!
  alt: String
  mime_type: String
}

# The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSONObject

type Mutation {
  dummy: String
  updateConfig(configInput: ConfigGeneralInput!): Config
  updateConfigSEO(seoInput: SEOInput!): Config
  cacheFlush: Boolean
}

interface Paginated {
  totalItems: Int!
  perPage: Int!
  currentPage: Int!
  lastPage: Int!
  items: [Timestamp]
}

type Query {
  dummy: String
  config: Config
  objectFromURL(url: String!): SEODocument @cacheControl(maxAge: 300)
}

type SEO @cacheControl(maxAge: 3600) {
  metaTitle: String
  metaDescription: String
  keywords: [String]
  url: String!
}

# This is used to query for every type of object we can associated a url with (implements SEO)
type SEODocument {
  dummy: String
}

input SEOInput {
  metaTitle: String
  metaDescription: String
  keywords: [String]
  url: String!
}

interface Timestamp {
  dateCreated: String
  dateUpdated: String
}
