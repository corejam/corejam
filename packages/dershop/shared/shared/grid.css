/**
*
* This is the global grid mixin to bootstrap all important grid styles.
*/
@define-mixin gridSpec $breakpoint {
  /** Grid Columns */
  @for $i from 1 to 12 {
    &(.cols$(breakpoint)-$i) {
      grid-template-columns: repeat($i, minmax(0, 1fr));
    }
  }
  &(.cols-none) {
    grid-template-columns: none;
  }
  &(.cols-auto) {
    grid-column: auto;
  }
  @for $i from 1 to 12 {
    &(.colSpan$(breakpoint)-$i) {
      grid-column: span $i / span $i;
    }
  }
  @for $i from 1 to 12 {
    &(.colStart$(breakpoint)-$i) {
      grid-column-start: $i;
    }
  }
  @for $i from 1 to 12 {
    &(.colEnd$(breakpoint)-$i) {
      grid-column-end: $i;
    }
  }
  &(.colStart$(breakpoint)-auto) {
    grid-column-start: auto;
  }
  &(.colEnd$(breakpoint)-auto) {
    grid-column-start: auto;
  }

  /** Grid gap  @TODO write better scale loop*/
  @for $i from 0 to 6 {
    &(.gap$(breakpoint)-$i) {
      grid-gap: $i * 0.25rem;
      gap: $i * 0.25rem;
    }
  }
  @for $i from 8 to 12 by 2 {
    &(.gap$(breakpoint)-$i) {
      grid-gap: $i * 0.25rem;
      gap: $i * 0.25rem;
    }
  }
  @for $i from 16 to 24 by 4 {
    &(.gap$(breakpoint)-$i) {
      grid-gap: $i * 0.25rem;
      gap: $i * 0.25rem;
    }
  }

  /** Grid Row */
  @for $i from 1 to 6 {
    &(.rows$(breakpoint)-$i) {
      grid-template-rows: repeat($i, minmax(0, 1fr));
    }
    &(.rowSpan$(breakpoint)-$i) {
      grid-row: span $i / span $i;
    }
  }
  &(.rows$(breakpoint)-none) {
    grid-template-rows: none;
  }
  &(.rows$(breakpoint)-auto) {
    grid-row: auto;
  }
}

:host {
  display: grid;
  width: 100%;
  @mixin gridSpec;

  @media (min-width: 640px) {
    @mixin gridSpec Sm;
  }
  @media (min-width: 768px) {
    @mixin gridSpec Md;
  }
  @media (min-width: 1024px) {
    @mixin gridSpec L;
  }
  @media (min-width: 1280px) {
    @mixin gridSpec Xl;
  }
}
