export const propertyToTransformer = {
  weight: async () => (await import("./transform/typography/weight")).default,
  textStyle: async () => (await import("./transform/typography/style")).default,
  display: async () => (await import("./transform/layout/display")).default,
  show: async () => (await import("./transform/layout/display")).default,
  flex: async () => (await import("./transform/flex/flex")).default,
  direction: async () => (await import("./transform/flex/direction")).default,
  justify: async () => (await import("./transform/box/justifyContent")).default,
  w: async () => (await import("./transform/sizing/width")).default,
  h: async () => (await import("./transform/sizing/height")).default,
  minH: async () => (await import("./transform/sizing/minHeight")).default,
  p: async () => (await import("./transform/spacing/padding")).default,
  pt: async () => (await import("./transform/spacing/padding")).default,
  pr: async () => (await import("./transform/spacing/padding")).default,
  pb: async () => (await import("./transform/spacing/padding")).default,
  pl: async () => (await import("./transform/spacing/padding")).default,
  px: async () => (await import("./transform/spacing/padding")).default,
  py: async () => (await import("./transform/spacing/padding")).default,
  m: async () => (await import("./transform/spacing/margin")).default,
  mt: async () => (await import("./transform/spacing/margin")).default,
  mr: async () => (await import("./transform/spacing/margin")).default,
  mb: async () => (await import("./transform/spacing/margin")).default,
  ml: async () => (await import("./transform/spacing/margin")).default,
  mx: async () => (await import("./transform/spacing/margin")).default,
  my: async () => (await import("./transform/spacing/margin")).default,
  max: async () => (await import("./transform/sizing/maxWidth")).default,
  bg: async () => (await import("./transform/backgrounds/color")).default,
  hide: async () => (await import("./transform/layout/hide")).default,
  bColor: async () => (await import("./transform/border/color")).default,
  color: async () => (await import("./transform/typography/color")).default,
  rounded: async () => (await import("./transform/border/radius")).default,
  roundedTop: async () => (await import("./transform/border/radius")).default,
  roundedRight: async () => (await import("./transform/border/radius")).default,
  roundedBottom: async () => (await import("./transform/border/radius")).default,
  roundedLeft: async () => (await import("./transform/border/radius")).default,
  bWidth: async () => (await import("./transform/border/width")).default,
  bWidthTop: async () => (await import("./transform/border/width")).default,
  bWidthRight: async () => (await import("./transform/border/width")).default,
  bWidthBottom: async () => (await import("./transform/border/width")).default,
  bWidthLeft: async () => (await import("./transform/border/width")).default,
  top: async () => (await import("./transform/layout/topRightBottomLeft")).default,
  right: async () => (await import("./transform/layout/topRightBottomLeft")).default,
  bottom: async () => (await import("./transform/layout/topRightBottomLeft")).default,
  left: async () => (await import("./transform/layout/topRightBottomLeft")).default,
  position: async () => (await import("./transform/layout/position")).default,
  size: async () => (await import("./transform/typography/size")).default,
  fontStyle: async () => (await import("./transform/typography/style")).default,
  lineHeight: async () => (await import("./transform/typography/lineHeight")).default,
  spacing: async () => (await import("./transform/typography/spacing")).default,
  decoration: async () => (await import("./transform/typography/decoration")).default,
  transform: async () => (await import("./transform/typography/transform")).default,
  align: async () => (await import("./transform/typography/align")).default,
  templateColumns: async () => (await import("./transform/grid/templateColumns")).default,
  templateRows: async () => (await import("./transform/grid/templateRows")).default,
  cols: async () => (await import("./transform/grid/columns")).default,
  colsStart: async () => (await import("./transform/grid/columnsStartEnd")).default,
  colsEnd: async () => (await import("./transform/grid/columnsStartEnd")).default,
  rows: async () => (await import("./transform/grid/rows")).default,
  rowsStart: async () => (await import("./transform/grid/rowsStartEnd")).default,
  rowsEnd: async () => (await import("./transform/grid/rowsStartEnd")).default,
  gap: async () => (await import("./transform/grid/gap")).default,
  gapCol: async () => (await import("./transform/grid/gap")).default,
  gapRow: async () => (await import("./transform/grid/gap")).default,
  autoFlow: async () => (await import("./transform/grid/autoFlow")).default,
  grid: async () => (await import("./transform/grid/grid")).default,
  fit: async () => (await import("./transform/layout/objectFit")).default,
  maxWidth: async () => (await import("./transform/sizing/maxWidth")).default,
  z: async () => (await import("./transform/layout/zIndex")).default,
  outline: async () => (await import("./transform/interactivity/outline")).default,
  alignContent: async () => (await import("./transform/box/alignContent")).default,
  items: async () => (await import("./transform/box/alignItems")).default,
  wrap: async () => (await import("./transform/flex/wrap")).default,
  shrink: async () => (await import("./transform/flex/shrink")).default,
  grow: async () => (await import("./transform/flex/grow")).default,
  order: async () => (await import("./transform/flex/order")).default,
  self: async () => (await import("./transform/box/alignSelf")).default,
  shadow: async () => (await import("./transform/effects/shadow")).default,
  bStyle: async () => (await import("./transform/border/style")).default,
  transition: async () => (await import("./transform/transition/transition")).default,
  duration: async () => (await import("./transform/transition/duration")).default,
  timing: async () => (await import("./transform/transition/timing")).default,
  delay: async () => (await import("./transform/transition/delay")).default,
  animation: async () => (await import("./transform/transition/animation")).default,
  overflow: async () => (await import("./transform/layout/overflow")).default,
};
